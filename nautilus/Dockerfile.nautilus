FROM alpine:3.10
ENV NODE_VERSION 10.16.3
RUN addgroup -g 1000 node \
	&& adduser -u 1000 -G node -s /bin/sh -D node \
	&& addgroup -g 167 -S ceph \
	&& adduser -u 167 -G ceph -S -s /bin/sh -D ceph \
	&& addgroup ceph abuild \
	&& apk --update add busybox \
		bash \
		coreutils \
		grep \
		sudo \
		git \
		tar \
		py3-virtualenv \
		abuild \
		xz \
		curl \
		libstdc++ \
		leveldb \
		leveldb-dev \
		lz4 lz4-libs \ 
		oath-toolkit \
		oath-toolkit-liboath \
		bison \
		flex \
		flex-libs \
		elfutils \
		libdwarf \
		popt \
		libnl \
		libnl3 \
		libnl3-cli \
		libcap-ng \
		gperf \
		rabbitmq-c \
		cunit \
	&& echo 'export PS1="[\u@\h:\w] \`if [ \$? = 0 ]; then echo \[\e[33m\]:\)\[\e[0m\]; else echo \[\e[31m\]:\(\[\e[0m\]; fi\`\n\D{%Y-%m-%d %T} \\$ "' >> /etc/profile \
	&& source /etc/profile \
	&& apk add --no-cache --virtual .build-deps \
		binutils-gold \
		curl \
		g++ \
		gcc \
		gnupg \
		libgcc \
		linux-headers \
		make \
		python \
		lz4-dev \
		oath-toolkit-dev \
                autoconf \
                automake \
		glib \
		glib-dev \
		libtool \
		flex-dev \
		elfutils-dev \
		libdwarf-dev \ 
		popt-dev \
		libnl-dev \
		libnl3-dev \
		libcap-ng-dev \
		rabbitmq-c-dev \
		cunit-dev

RUN git clone https://github.com/jemalloc/jemalloc.git \
	&& cd jemalloc \
	&& ./autogen.sh \
	&& make \
	&& make install \
	&& make clean \
	&& cd /

RUN cd / \
	&& git clone --branch stable-1.5 --single-branch https://github.com/efficios/babeltrace.git babeltrace \
	&& cd babeltrace \
	&& ./bootstrap \
	&& ./configure \
		--disable-debug-info \
		--disable-man-pages \
	&& make \
	&& make install \
	&& make clean \
	&& cd /	

RUN cd / \
	&& for key in \
		94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
		FD3A5288F042B6850C66B31F09FE44734EB7990E \
		71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
		DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
		C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
		B9AE9905FFD7803F25714661B63B535A4C206CA9 \
		77984A986EBC2AA786BC0F66B01FBB92821C587A \
		8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
		4ED778F539E3634C779C87C6D7062848A1AB005C \
		A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
		B9E2F5981AA6E0CD28160D9FF13993A75599653C \
	; do \
		gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" || \
		gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
		gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ; \
	done \
	&& curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz" \
	&& curl -fsSLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
	&& gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
	&& grep " node-v$NODE_VERSION.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
	&& tar -xf "node-v$NODE_VERSION.tar.xz" \
	&& cd "node-v$NODE_VERSION" \
	&& ./configure \
	&& make -j$(getconf _NPROCESSORS_ONLN) V= \
	&& make install \
	&& cd .. \
	&& rm -Rf "node-v$NODE_VERSION" \
	&& rm "node-v$NODE_VERSION.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt

ENV YARN_VERSION 1.15.2

RUN apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \
	&& for key in \
		6A010C5166006599AA17F08146C2130DFD2497F5 \
	; do \
		gpg --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys "$key" || \
		gpg --batch --keyserver hkp://ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
		gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys "$key" ; \
	done \
	&& curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
	&& curl -fsSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc" \
	&& gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
	&& mkdir -p /opt \
	&& tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \
	&& ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \
	&& ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \
	&& rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz 


ARG DPDK_VER=16.11.8
ARG KERNEL_VER=5.2.9

RUN wget https://git.dpdk.org/dpdk-stable/snapshot/dpdk-stable-$DPDK_VER.tar.gz && \
    tar -xzf dpdk-stable-$DPDK_VER.tar.gz && \
    \
    # Install Alpine packages
    apk add --no-cache make gcc linux-headers bsd-compat-headers binutils coreutils diffutils && \
    apk add --no-cache gettext bash grep sed texinfo perl util-linux vim build-base libexecinfo libexecinfo-dev && \
    apk add --no-cache abuild bc cmake ncurses-dev ca-certificates wget && \
    apk add numactl-dev --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted && \
    \
    # Add following lines / workarounds to header files 
    sed -ie '/int cmsg_type;/a unsigned char __cmsg_data;' /usr/include/bits/socket.h && \
    sed -i.old '1s;^;#include <fcntl.h>\n;' /dpdk-stable-$DPDK_VER/lib/librte_eal/common/include/rte_common.h && \
    sed -ie '/#define _VNIC_DEVCMD_H_/a typedef u32 u_int32_t;' /dpdk-stable-$DPDK_VER/drivers/net/enic/base/vnic_devcmd.h && \
    \
    # Prevent usage of the header files on /usr/include/fortify path by deleting them
    # Instead of them header files from /usr/include path will be used
    rm -rf /usr/include/fortify/* && \
    \
    # Add CFLAGS += -D_GNU_SOURCE to the following Makefiles
    cd /dpdk-stable-$DPDK_VER && \
    sed -ie '/CFLAGS/a CFLAGS += -D_GNU_SOURCE' lib/librte_ring/Makefile && \
    sed -ie '/CFLAGS/a CFLAGS += -D_GNU_SOURCE' lib/librte_mempool/Makefile && \
    sed -ie '/CFLAGS/a CFLAGS += -D_GNU_SOURCE' lib/librte_mbuf/Makefile && \
    sed -ie '/CFLAGS/a CFLAGS += -D_GNU_SOURCE' lib/librte_timer/Makefile && \
    sed -ie '/CFLAGS/a CFLAGS += -D_GNU_SOURCE' lib/librte_net/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_eal/linuxapp/eal/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_ether/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_cryptodev/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_vhost/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_hash/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_lpm/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_acl/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_ip_frag/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_sched/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_distributor/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_kni/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_port/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_table/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_pipeline/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' lib/librte_reorder/Makefile && \
    \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/af_packet/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/bonding/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/cxgbe/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/e1000/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/ena/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/enic/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/fm10k/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/i40e/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/ixgbe/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/bnxt/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/null/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/qede/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/ring/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/virtio/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/vmxnet3/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/net/vhost/Makefile && \
    sed -ie '/CFLAGS += $(WERROR_FLAGS)/a CFLAGS += -D_GNU_SOURCE' drivers/crypto/null/Makefile && \
    \
    # Exclude tests from compiling
    sed -i "/\b\(DIRS\|test\)\b/d" app/Makefile && \
    sed -i "/\b\(DIRS\|test-acl\)\b/d" app/Makefile && \
    sed -i "/\b\(DIRS\|test-pipeline\)\b/d" app/Makefile && \
    sed -i "/\b\(DIRS\|test-pmd\)\b/d" app/Makefile && \
    sed -i "/\b\(DIRS\|cmdline_test\)\b/d" app/Makefile && \
    sed -i "/\b\(DIRS\|proc_info\)\b/d" app/Makefile && \
    sed -i "/\b\(DIRS\|pdump\)\b/d" app/Makefile && \
    cd / && \
    \
    # Install missing Alpine Linux kernel modules
    wget -nv -P /srv https://www.kernel.org/pub/linux/kernel/v5.x/linux-$KERNEL_VER.tar.gz && \
    tar -C /srv -zxf /srv/linux-$KERNEL_VER.tar.gz && \
    cd /srv/linux-$KERNEL_VER && \
    make defconfig && \
    ([ ! -f /proc/1/root/proc/config.gz ] || zcat /proc/1/root/proc/config.gz > .config) && \
    echo 'CONFIG_USB=m' >> .config && \
    echo 'CONFIG_USB_HID=m' >> .config && \
    echo 'CONFIG_USB_SUPPORT=y' >> .config && \
    echo 'CONFIG_USB_COMMON=m' >> .config && \
    echo 'CONFIG_USB_ARCH_HAS_HCD=y' >> .config && \
    echo 'CONFIG_USB_DEFAULT_PERSIST=y' >> .config && \
    echo 'CONFIG_USBIP_CORE=m' >> .config && \
    echo 'CONFIG_USBIP_VHCI_HCD=m' >> .config && \
    echo 'CONFIG_USBIP_VHCI_HC_PORTS=8' >> .config && \
    echo 'CONFIG_USBIP_VHCI_NR_HCS=1' >> .config && \
    echo 'CONFIG_USBIP_HOST=m' >> .config && \
    sed -i'.bak' '/hcd->amd_resume_bug/{s/^/\/\//;n;s/^/\/\//}' ./drivers/usb/core/hcd-pci.c && \
    make oldconfig && \
    make modules_prepare && \
    make modules && \
    make modules_install && \
    make clean && \
    cd / && \
    \
    # Install DPDK
    mkdir /dpdk-build && \
    cd dpdk-stable-$DPDK_VER && \
    make install T=x86_64-native-linuxapp-gcc RTE_KERNELDIR=/srv/linux-$KERNEL_VER DESTDIR=/dpdk-build


RUN cd / \
	&& git clone --single-branch --branch=nautilus https://github.com/ceph/ceph
COPY APKBUILD.in.patch /ceph
COPY make-dist.patch /ceph
COPY eal_hugepage_info.c.patch /ceph
RUN chown -R ceph:ceph ceph 
USER 167:167
WORKDIR /ceph
RUN cd /ceph \
	&& patch -p1 < APKBUILD.in.patch \
	&& patch -p1 make-dist < make-dist.patch \
	&& ./make-dist 
COPY make-myapk /ceph
USER root
RUN cd /ceph \
	&& su ceph - -c ./make-myapk \
	&& cd ..  #\
#	&& apk del .build-deps \
#	&& apk del .build-deps-yarn
